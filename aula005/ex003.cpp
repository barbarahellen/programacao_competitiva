/*
PORTAS (Torneio Feminino de Computa√ß√£o 2022)

Ada est√° participando do Torneio Feminino de Cartas (TFC). No TFC a participante passa em frente a um corredor com ùëÅ portas numeradas sequencialmente de 1 at√© N. Atr√°s de cada porta h√° um ba√∫ inicialmente vazio.

Antes do jogo come√ßar k assistentes passam. Cada uma delas anuncia tr√™s n√∫meros L, R e X, e adiciona uma carta de valor X em cada ba√∫ atr√°s de cada porta de L at√© R.

Quando o jogo come√ßa, Ada escolhe duas portas i e j, i‚â§j, ela entra no corredor pela porta i e segue o caminho para a direita pegando todas as cartas que est√£o em ba√∫s atr√°s das portas entre 
i e j.

A pontua√ß√£o da participante √© dada pela soma dos valores de todas as cartas que ela pegou. Qual a maior pontua√ß√£o que Ada pode obter?

Entrada
A primeira linha de entrada cont√©m dois inteiros N e K representando o m√∫mero de assistentes. Cada uma das K linhas seguintes possui 3 inteiros. Li, Ri e Xi, os n√∫meros anunciados pela i-√©sima assistente.

Sa√≠da
Sua sa√≠da deve conter um inteiro A, a maior pontua√ß√£o que Ada pode obter.

Exemplo de Entrada	
3 3
1 3 2
1 2 -4
2 3 -3

Exemplo de Sa√≠da
-1

*/

#include<bits/stdc++.h>
using namespace std;
using ll = long long;

const int maxn = 1e6 + 10, inf = 1e9 + 10;

int n, k, v[maxn], pref[maxn];  // v[maxn] = vetor para guardar o quanto t√° incrementando e decrementando
                                // pref[maxn] = guarda o valor final de cada posi√ß√£o do array
ll pref2[maxn];       // guarda a soma de cada prefixo

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n >> k;

    while(k--){
        int l, r, x;
        cin >> l >> r >> x;
        v[l] += x;
        v[r + 1] -= x;
    }

    for(int i = 1; i <= n; i++){
        pref[i] = pref[i + 1] + v[i];  // guarda o valor final de cada posi√ß√£o array
    }
    for(int i = 1; i <= n; i++){
        pref2[i] = pref2[i - 1] + pref[i];  // guarda a soma do prefixo do valor do pref2
    }

    ll menor = 0;
    ll resp = -inf;

    for(int i = 1; i <= n; i++){
        resp = max(resp,pref2[i] - menor);
        menor = min(menor, pref2[i]);
    }

    cout << resp << "\n";

    return 0;
}